export const expectedDefMap = {
  accessControl: {
    groupname: "OgcApiDataV2",
    title: "accessControl",
    description: "[Access Control](#access-control) configuration.",
    ref: "ApiSecurity",
    addRef: "",
    deprecated: false,
    type: "object",
  },
  api: {
    groupname: "OgcApiDataV2",
    title: "api",
    description: "[API Building Blocks](#building-blocks) configuration.",
    ref: "ExtensionConfiguration",
    addRef: "",
    deprecated: false,
    type: "array",
  },
  apiValidation: {
    groupname: "OgcApiDataV2",
    title: "apiValidation",
    description:
      "During startup of an API, the configuration can be validated. The supported values are     `NONE`, `LAX`, and `STRICT`. `STRICT` will block the start of an API with warnings, while     an API with warnings, but no errors will start with `LAX`. If the value is set to `NONE`,     no validation will occur. Warnings are issued for problems in the configuration that can     affect the use of the API while errors are issued for cases where the API cannot be used.     Typically, API validation during startup will only be used in development and testing     environments since the API validating results in a slower startup time and should not be     necessary in production environments.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  apiVersion: {
    groupname: "OgcApiDataV2",
    title: "apiVersion",
    description:
      "Adds a version to the URL path, instead of `/{id}` it will be `/{id}/v{apiVersion}`.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  asQueryParameters: {
    groupname: "QueryablesConfiguration",
    title: "asQueryParameters",
    description:
      "If `true`, all queryables with a simple value (string, number or boolean) will be     provided query parameters to filter features.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  auto: {
    groupname: "OgcApiDataV2",
    title: "auto",
    description: "Option to generate missing definitions automatically from the data source.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  autoPersist: {
    groupname: "OgcApiDataV2",
    title: "autoPersist",
    description:
      "Option to persist definitions generated with `auto` to the configuration file. The     [Store](/application/40-store.md) must not be `READ_ONLY` for this to take effect.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  buildingBlock: {
    groupname: "QueryablesConfiguration",
    title: "buildingBlock",
    description: "Always `QUERYABLES`.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  caching: {
    groupname: "QueryablesConfiguration",
    title: "caching",
    description:
      "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
    ref: "Caching",
    addRef: "",
    deprecated: false,
    type: "object",
  },
  collections: {
    groupname: "OgcApiDataV2",
    title: "collections",
    description:
      "Collection configurations, the key is the collection id, for the value see     [Collection](#collection) below.",
    ref: "",
    addRef: "FeatureTypeConfigurationOgcApi",
    deprecated: false,
    type: "object",
  },
  createdAt: {
    groupname: "OgcApiDataV2",
    title: "createdAt",
    description: "",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  defaultCaching: {
    groupname: "OgcApiDataV2",
    title: "defaultCaching",
    description: "Sets fixed values for [HTTP Caching Headers](#caching) for the resources.",
    ref: "Caching",
    addRef: "",
    deprecated: false,
    type: "object",
  },
  defaultExtent: {
    groupname: "OgcApiDataV2",
    title: "defaultExtent",
    description:
      "By default, the spatial and temporal extent of data is derived from the data when     starting the API, but the [Default Extent](#default-extent) can also be configured.",
    ref: "CollectionExtent",
    addRef: "",
    deprecated: false,
    type: "object",
  },
  description: {
    groupname: "OgcApiDataV2",
    title: "description",
    description: "Human readable description.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  enableEndpoint: {
    groupname: "QueryablesConfiguration",
    title: "enableEndpoint",
    description: "If `true`, the Queryables endpoint will be enabled.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  enabled: {
    groupname: "OgcApiDataV2",
    title: "enabled",
    description:
      "Option to disable the service, which means its REST API will not be available and     background tasks will not be running.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  enabled1: {
    groupname: "QueryablesConfiguration",
    title: "enabled",
    description: "Enable the building block?",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  entityStorageVersion: {
    groupname: "OgcApiDataV2",
    title: "entityStorageVersion",
    description: "",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  excluded: {
    groupname: "QueryablesConfiguration",
    title: "excluded",
    description:
      "The list of properties that would be queryables based on `included`, but which should     not be queryables.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  extensionType: {
    groupname: "QueryablesConfiguration",
    title: "extensionType",
    description: "*Deprecated* See `buildingBlock`.",
    ref: "",
    addRef: "",
    deprecated: true,
    type: undefined,
  },
  externalDocs: {
    groupname: "OgcApiDataV2",
    title: "externalDocs",
    description:
      "Link to a [document or website](#external-document) with more information about this     API.",
    ref: "ExternalDocumentation",
    addRef: "",
    deprecated: false,
    type: "object",
  },
  id: {
    groupname: "OgcApiDataV2",
    title: "id",
    description:
      "Unique identifier of the entity, has to match the filename. Allowed characters are     (A-Z, a-z), numbers (0-9), underscore and hyphen.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  included: {
    groupname: "QueryablesConfiguration",
    title: "included",
    description:
      "The list of properties that can be used in CQL2 filter expressions and/or for which     filtering query parameters are provided for a collection. Properties that are not of type     `OBJECT` or `OBJECT_ARRAY` are eligible as queryables unless `isQueryable` is set to     `false` for the property. The special value `*` includes all eligible properties as     queryables. By default, no property is queryable (this is for backwards compatibility, in     v4.0 the default behaviour will change to all eligible properties).",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  label: {
    groupname: "OgcApiDataV2",
    title: "label",
    description: "Human readable label.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  lastModified: {
    groupname: "OgcApiDataV2",
    title: "lastModified",
    description: "",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  metadata: {
    groupname: "OgcApiDataV2",
    title: "metadata",
    description: "General [Metadata](#metadata) for the API.",
    ref: "ApiMetadata",
    addRef: "",
    deprecated: false,
    type: "object",
  },
  pathSeparator: {
    groupname: "QueryablesConfiguration",
    title: "pathSeparator",
    description:
      "The character that is used as the path separator in case of object-valued properties.     Either `DOT` or `UNDERSCORE`.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  serviceType: {
    groupname: "OgcApiDataV2",
    title: "serviceType",
    description: "Always `OGC_API`.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
  shouldStart: {
    groupname: "OgcApiDataV2",
    title: "shouldStart",
    description: "*Deprecated* See `enabled`.",
    ref: "",
    addRef: "",
    deprecated: true,
    type: undefined,
  },
  tags: {
    groupname: "OgcApiDataV2",
    title: "tags",
    description:
      "Tags for this API. Every tag is a string without white space. Tags are shown in the     *API Catalog* and can be used to filter the catalog response with the query parameter     `tags`, e.g. `tags\u003dINSPIRE`.",
    ref: "",
    addRef: "",
    deprecated: false,
    type: undefined,
  },
};

export const expectedRef = [
  { key: "contactName", enum: "false", groupname: "ApiMetadata" },
  { key: "serviceType", enum: "OGC_API", groupname: "" },
  { key: "enabled", enum: "true", groupname: "OgcApiDataV2" },
  { key: "enabled", enum: "false", groupname: "OgcApiDataV2" },
  { key: "shouldStart", enum: "true", groupname: "OgcApiDataV2" },
  { key: "shouldStart", enum: "false", groupname: "OgcApiDataV2" },
  { key: "auto", enum: "true", groupname: "OgcApiDataV2" },
  { key: "auto", enum: "false", groupname: "OgcApiDataV2" },
  { key: "autoPersist", enum: "true", groupname: "OgcApiDataV2" },
  { key: "autoPersist", enum: "false", groupname: "OgcApiDataV2" },
  { key: "forceLongitudeFirst", enum: "true", groupname: "EpsgCrs" },
  { key: "forceLongitudeFirst", enum: "false", groupname: "EpsgCrs" },
  { key: "spatialComputed", enum: "true", groupname: "CollectionExtent" },
  { key: "spatialComputed", enum: "false", groupname: "CollectionExtent" },
  { key: "temporalComputed", enum: "true", groupname: "CollectionExtent" },
  { key: "temporalComputed", enum: "false", groupname: "CollectionExtent" },
  { key: "enabled", enum: "true", groupname: "Policies" },
  { key: "enabled", enum: "false", groupname: "Policies" },
  { key: "enabled", enum: "true", groupname: "ApiSecurity" },
  { key: "enabled", enum: "false", groupname: "ApiSecurity" },
  { key: "templated", enum: "true", groupname: "Link" },
  { key: "templated", enum: "false", groupname: "Link" },
  { key: "enabled", enum: "true", groupname: "CollectionsConfiguration" },
  { key: "enabled", enum: "false", groupname: "CollectionsConfiguration" },
  { key: "collectionIdAsParameter", enum: "true", groupname: "CollectionsConfiguration" },
  { key: "collectionIdAsParameter", enum: "false", groupname: "CollectionsConfiguration" },
  { key: "collectionDefinitionsAreIdentical", enum: "true", groupname: "CollectionsConfiguration" },
  {
    key: "collectionDefinitionsAreIdentical",
    enum: "false",
    groupname: "CollectionsConfiguration",
  },
  { key: "enabled", enum: "true", groupname: "QueryablesConfiguration" },
  { key: "enabled", enum: "false", groupname: "QueryablesConfiguration" },
  { key: "enableEndpoint", enum: "true", groupname: "QueryablesConfiguration" },
  { key: "enableEndpoint", enum: "false", groupname: "QueryablesConfiguration" },
  { key: "asQueryParameters", enum: "true", groupname: "QueryablesConfiguration" },
  { key: "asQueryParameters", enum: "false", groupname: "QueryablesConfiguration" },
  { key: "enabled", enum: "true", groupname: "CommonConfiguration" },
  { key: "enabled", enum: "false", groupname: "CommonConfiguration" },
  { key: "enabled", enum: "true", groupname: "CrsConfiguration" },
  { key: "enabled", enum: "false", groupname: "CrsConfiguration" },
  { key: "suppressGlobalCrsList", enum: "true", groupname: "CrsConfiguration" },
  { key: "suppressGlobalCrsList", enum: "false", groupname: "CrsConfiguration" },
  { key: "enabled", enum: "true", groupname: "CityJsonConfiguration" },
  { key: "enabled", enum: "false", groupname: "CityJsonConfiguration" },
  { key: "textSequences", enum: "true", groupname: "CityJsonConfiguration" },
  { key: "textSequences", enum: "false", groupname: "CityJsonConfiguration" },
  { key: "enabled", enum: "true", groupname: "FeaturesCoreConfiguration" },
  { key: "enabled", enum: "false", groupname: "FeaturesCoreConfiguration" },
  { key: "showsFeatureSelfLink", enum: "true", groupname: "FeaturesCoreConfiguration" },
  { key: "showsFeatureSelfLink", enum: "false", groupname: "FeaturesCoreConfiguration" },
  { key: "validateCoordinatesInQueries", enum: "true", groupname: "FeaturesCoreConfiguration" },
  { key: "validateCoordinatesInQueries", enum: "false", groupname: "FeaturesCoreConfiguration" },
  { key: "enabled", enum: "true", groupname: "GeoJsonConfiguration" },
  { key: "enabled", enum: "false", groupname: "GeoJsonConfiguration" },
  { key: "useFormattedJsonOutput", enum: "true", groupname: "GeoJsonConfiguration" },
  { key: "useFormattedJsonOutput", enum: "false", groupname: "GeoJsonConfiguration" },
  { key: "enabled", enum: "true", groupname: "GmlConfiguration" },
  { key: "enabled", enum: "false", groupname: "GmlConfiguration" },
  { key: "supportsStandardResponseParameters", enum: "true", groupname: "GmlConfiguration" },
  { key: "supportsStandardResponseParameters", enum: "false", groupname: "GmlConfiguration" },
  { key: "enabled", enum: "true", groupname: "FeaturesHtmlConfiguration" },
  { key: "enabled", enum: "false", groupname: "FeaturesHtmlConfiguration" },
  { key: "removeZoomLevelConstraints", enum: "true", groupname: "FeaturesHtmlConfiguration" },
  { key: "removeZoomLevelConstraints", enum: "false", groupname: "FeaturesHtmlConfiguration" },
  { key: "propertyTooltips", enum: "true", groupname: "FeaturesHtmlConfiguration" },
  { key: "propertyTooltips", enum: "false", groupname: "FeaturesHtmlConfiguration" },
  { key: "propertyTooltipsOnItems", enum: "true", groupname: "FeaturesHtmlConfiguration" },
  { key: "propertyTooltipsOnItems", enum: "false", groupname: "FeaturesHtmlConfiguration" },
  { key: "enabled", enum: "true", groupname: "FoundationConfiguration" },
  { key: "enabled", enum: "false", groupname: "FoundationConfiguration" },
  { key: "useLangParameter", enum: "true", groupname: "FoundationConfiguration" },
  { key: "useLangParameter", enum: "false", groupname: "FoundationConfiguration" },
  { key: "includeLinkHeader", enum: "true", groupname: "FoundationConfiguration" },
  { key: "includeLinkHeader", enum: "false", groupname: "FoundationConfiguration" },
  { key: "includeSpecificationInformation", enum: "true", groupname: "FoundationConfiguration" },
  { key: "includeSpecificationInformation", enum: "false", groupname: "FoundationConfiguration" },
  { key: "isDataset", enum: "true", groupname: "ApiCatalogEntry" },
  { key: "isDataset", enum: "false", groupname: "ApiCatalogEntry" },
  { key: "enabled", enum: "true", groupname: "HtmlConfiguration" },
  { key: "enabled", enum: "false", groupname: "HtmlConfiguration" },
  { key: "noIndexEnabled", enum: "true", groupname: "HtmlConfiguration" },
  { key: "noIndexEnabled", enum: "false", groupname: "HtmlConfiguration" },
  { key: "schemaOrgEnabled", enum: "true", groupname: "HtmlConfiguration" },
  { key: "schemaOrgEnabled", enum: "false", groupname: "HtmlConfiguration" },
  { key: "microdataEnabled", enum: "true", groupname: "HtmlConfiguration" },
  { key: "microdataEnabled", enum: "false", groupname: "HtmlConfiguration" },
  { key: "collectionDescriptionsInOverview", enum: "true", groupname: "HtmlConfiguration" },
  { key: "collectionDescriptionsInOverview", enum: "false", groupname: "HtmlConfiguration" },
  { key: "suppressEmptyCollectionsInOverview", enum: "true", groupname: "HtmlConfiguration" },
  { key: "suppressEmptyCollectionsInOverview", enum: "false", groupname: "HtmlConfiguration" },
  { key: "sendEtags", enum: "true", groupname: "HtmlConfiguration" },
  { key: "sendEtags", enum: "false", groupname: "HtmlConfiguration" },
  { key: "enabled", enum: "true", groupname: "JsonConfiguration" },
  { key: "enabled", enum: "false", groupname: "JsonConfiguration" },
  { key: "enabled", enum: "true", groupname: "Oas30Configuration" },
  { key: "enabled", enum: "false", groupname: "Oas30Configuration" },
  { key: "enabled", enum: "true", groupname: "TileMatrixSetsConfiguration" },
  { key: "enabled", enum: "false", groupname: "TileMatrixSetsConfiguration" },
  { key: "runOnStartup", enum: "true", groupname: "SeedingOptions" },
  { key: "runOnStartup", enum: "false", groupname: "SeedingOptions" },
  { key: "purge", enum: "true", groupname: "SeedingOptions" },
  { key: "purge", enum: "false", groupname: "SeedingOptions" },
  { key: "merge", enum: "true", groupname: "LevelTransformation" },
  { key: "merge", enum: "false", groupname: "LevelTransformation" },
  { key: "singleCollectionEnabled", enum: "true", groupname: "TileProviderFeatures" },
  { key: "singleCollectionEnabled", enum: "false", groupname: "TileProviderFeatures" },
  { key: "multiCollectionEnabled", enum: "true", groupname: "TileProviderFeatures" },
  { key: "multiCollectionEnabled", enum: "false", groupname: "TileProviderFeatures" },
  { key: "ignoreInvalidGeometries", enum: "true", groupname: "TileProviderFeatures" },
  { key: "ignoreInvalidGeometries", enum: "false", groupname: "TileProviderFeatures" },
  { key: "type", enum: "FEATURES", groupname: "TileProvider" },
  { key: "type", enum: "MBTILES", groupname: "TileProvider" },
  { key: "type", enum: "TILESERVER", groupname: "TileProvider" },
  { key: "enabled", enum: "true", groupname: "TilesConfiguration" },
  { key: "enabled", enum: "false", groupname: "TilesConfiguration" },
  { key: "removeZoomLevelConstraints", enum: "true", groupname: "TilesConfiguration" },
  { key: "removeZoomLevelConstraints", enum: "false", groupname: "TilesConfiguration" },
  { key: "collectionTiles", enum: "true", groupname: "TilesConfiguration" },
  { key: "collectionTiles", enum: "false", groupname: "TilesConfiguration" },
  { key: "singleCollectionEnabled", enum: "true", groupname: "TilesConfiguration" },
  { key: "singleCollectionEnabled", enum: "false", groupname: "TilesConfiguration" },
  { key: "datasetTiles", enum: "true", groupname: "TilesConfiguration" },
  { key: "datasetTiles", enum: "false", groupname: "TilesConfiguration" },
  { key: "multiCollectionEnabled", enum: "true", groupname: "TilesConfiguration" },
  { key: "multiCollectionEnabled", enum: "false", groupname: "TilesConfiguration" },
  { key: "ignoreInvalidGeometries", enum: "true", groupname: "TilesConfiguration" },
  { key: "ignoreInvalidGeometries", enum: "false", groupname: "TilesConfiguration" },
  { key: "enabled", enum: "true", groupname: "XmlConfiguration" },
  { key: "enabled", enum: "false", groupname: "XmlConfiguration" },
  { key: "enabled", enum: "true", groupname: "SchemaConfiguration" },
  { key: "enabled", enum: "false", groupname: "SchemaConfiguration" },
  { key: "buildingBlock", enum: "CRUD", groupname: "CrudConfiguration" },
  { key: "buildingBlock", enum: "TRANSACTIONS", groupname: "CrudConfiguration" },
  { key: "extensionType", enum: "CRUD", groupname: "CrudConfiguration" },
  { key: "extensionType", enum: "TRANSACTIONS", groupname: "CrudConfiguration" },
  { key: "enabled", enum: "true", groupname: "CrudConfiguration" },
  { key: "enabled", enum: "false", groupname: "CrudConfiguration" },
  { key: "optimisticLockingLastModified", enum: "true", groupname: "CrudConfiguration" },
  { key: "optimisticLockingLastModified", enum: "false", groupname: "CrudConfiguration" },
  { key: "optimisticLockingETag", enum: "true", groupname: "CrudConfiguration" },
  { key: "optimisticLockingETag", enum: "false", groupname: "CrudConfiguration" },
  { key: "enabled", enum: "true", groupname: "GltfConfiguration" },
  { key: "enabled", enum: "false", groupname: "GltfConfiguration" },
  { key: "meshQuantization", enum: "true", groupname: "GltfConfiguration" },
  { key: "meshQuantization", enum: "false", groupname: "GltfConfiguration" },
  { key: "withNormals", enum: "true", groupname: "GltfConfiguration" },
  { key: "withNormals", enum: "false", groupname: "GltfConfiguration" },
  { key: "withOutline", enum: "true", groupname: "GltfConfiguration" },
  { key: "withOutline", enum: "false", groupname: "GltfConfiguration" },
  { key: "polygonOrientationNotGuaranteed", enum: "true", groupname: "GltfConfiguration" },
  { key: "polygonOrientationNotGuaranteed", enum: "false", groupname: "GltfConfiguration" },
  { key: "withSurfaceType", enum: "true", groupname: "GltfConfiguration" },
  { key: "withSurfaceType", enum: "false", groupname: "GltfConfiguration" },
  { key: "enabled", enum: "true", groupname: "JsonFgConfiguration" },
  { key: "enabled", enum: "false", groupname: "JsonFgConfiguration" },
  { key: "describedby", enum: "true", groupname: "JsonFgConfiguration" },
  { key: "describedby", enum: "false", groupname: "JsonFgConfiguration" },
  { key: "coordRefSys", enum: "true", groupname: "JsonFgConfiguration" },
  { key: "coordRefSys", enum: "false", groupname: "JsonFgConfiguration" },
  { key: "geojsonCompatibility", enum: "true", groupname: "JsonFgConfiguration" },
  { key: "geojsonCompatibility", enum: "false", groupname: "JsonFgConfiguration" },
  { key: "useCuries", enum: "true", groupname: "JsonFgConfiguration" },
  { key: "useCuries", enum: "false", groupname: "JsonFgConfiguration" },
  { key: "enabled", enum: "true", groupname: "SearchConfiguration" },
  { key: "enabled", enum: "false", groupname: "SearchConfiguration" },
  { key: "managerEnabled", enum: "true", groupname: "SearchConfiguration" },
  { key: "managerEnabled", enum: "false", groupname: "SearchConfiguration" },
  { key: "validationEnabled", enum: "true", groupname: "SearchConfiguration" },
  { key: "validationEnabled", enum: "false", groupname: "SearchConfiguration" },
  { key: "allLinksAreLocal", enum: "true", groupname: "SearchConfiguration" },
  { key: "allLinksAreLocal", enum: "false", groupname: "SearchConfiguration" },
  { key: "enabled", enum: "true", groupname: "FilterConfiguration" },
  { key: "enabled", enum: "false", groupname: "FilterConfiguration" },
  { key: "enabled", enum: "true", groupname: "GeometrySimplificationConfiguration" },
  { key: "enabled", enum: "false", groupname: "GeometrySimplificationConfiguration" },
  { key: "enabled", enum: "true", groupname: "ProjectionsConfiguration" },
  { key: "enabled", enum: "false", groupname: "ProjectionsConfiguration" },
  { key: "default", enum: "true", groupname: "RoutingFlag" },
  { key: "default", enum: "false", groupname: "RoutingFlag" },
  { key: "enabled", enum: "true", groupname: "HtmlForm" },
  { key: "enabled", enum: "false", groupname: "HtmlForm" },
  { key: "enabled", enum: "true", groupname: "RoutingConfiguration" },
  { key: "enabled", enum: "false", groupname: "RoutingConfiguration" },
  { key: "manageRoutes", enum: "true", groupname: "RoutingConfiguration" },
  { key: "manageRoutes", enum: "false", groupname: "RoutingConfiguration" },
  { key: "intermediateWaypoints", enum: "true", groupname: "RoutingConfiguration" },
  { key: "intermediateWaypoints", enum: "false", groupname: "RoutingConfiguration" },
  { key: "weightRestrictions", enum: "true", groupname: "RoutingConfiguration" },
  { key: "weightRestrictions", enum: "false", groupname: "RoutingConfiguration" },
  { key: "heightRestrictions", enum: "true", groupname: "RoutingConfiguration" },
  { key: "heightRestrictions", enum: "false", groupname: "RoutingConfiguration" },
  { key: "obstacles", enum: "true", groupname: "RoutingConfiguration" },
  { key: "obstacles", enum: "false", groupname: "RoutingConfiguration" },
  { key: "enabled", enum: "true", groupname: "SortingConfiguration" },
  { key: "enabled", enum: "false", groupname: "SortingConfiguration" },
  { key: "enabled", enum: "true", groupname: "StylesConfiguration" },
  { key: "enabled", enum: "false", groupname: "StylesConfiguration" },
  { key: "managerEnabled", enum: "true", groupname: "StylesConfiguration" },
  { key: "managerEnabled", enum: "false", groupname: "StylesConfiguration" },
  { key: "validationEnabled", enum: "true", groupname: "StylesConfiguration" },
  { key: "validationEnabled", enum: "false", groupname: "StylesConfiguration" },
  { key: "useIdFromStylesheet", enum: "true", groupname: "StylesConfiguration" },
  { key: "useIdFromStylesheet", enum: "false", groupname: "StylesConfiguration" },
  { key: "resourcesEnabled", enum: "true", groupname: "StylesConfiguration" },
  { key: "resourcesEnabled", enum: "false", groupname: "StylesConfiguration" },
  { key: "resourceManagerEnabled", enum: "true", groupname: "StylesConfiguration" },
  { key: "resourceManagerEnabled", enum: "false", groupname: "StylesConfiguration" },
  { key: "deriveCollectionStyles", enum: "true", groupname: "StylesConfiguration" },
  { key: "deriveCollectionStyles", enum: "false", groupname: "StylesConfiguration" },
  { key: "webmapWithPopup", enum: "true", groupname: "StylesConfiguration" },
  { key: "webmapWithPopup", enum: "false", groupname: "StylesConfiguration" },
  { key: "webmapWithLayerControl", enum: "true", groupname: "StylesConfiguration" },
  { key: "webmapWithLayerControl", enum: "false", groupname: "StylesConfiguration" },
  { key: "layerControlAllLayers", enum: "true", groupname: "StylesConfiguration" },
  { key: "layerControlAllLayers", enum: "false", groupname: "StylesConfiguration" },
  { key: "enabled", enum: "true", groupname: "TextSearchConfiguration" },
  { key: "enabled", enum: "false", groupname: "TextSearchConfiguration" },
  { key: "enabled", enum: "true", groupname: "Tiles3dConfiguration" },
  { key: "enabled", enum: "false", groupname: "Tiles3dConfiguration" },
  { key: "clampToEllipsoid", enum: "true", groupname: "Tiles3dConfiguration" },
  { key: "clampToEllipsoid", enum: "false", groupname: "Tiles3dConfiguration" },
  { key: "enabled", enum: "true", groupname: "CsvConfiguration" },
  { key: "enabled", enum: "false", groupname: "CsvConfiguration" },
  { key: "enabled", enum: "true", groupname: "FeaturesExtensionsConfiguration" },
  { key: "enabled", enum: "false", groupname: "FeaturesExtensionsConfiguration" },
  { key: "postOnItems", enum: "true", groupname: "FeaturesExtensionsConfiguration" },
  { key: "postOnItems", enum: "false", groupname: "FeaturesExtensionsConfiguration" },
  { key: "intersectsParameter", enum: "true", groupname: "FeaturesExtensionsConfiguration" },
  { key: "intersectsParameter", enum: "false", groupname: "FeaturesExtensionsConfiguration" },
  { key: "enabled", enum: "true", groupname: "FlatgeobufConfiguration" },
  { key: "enabled", enum: "false", groupname: "FlatgeobufConfiguration" },
  { key: "enabled", enum: "true", groupname: "GeoJsonLdConfiguration" },
  { key: "enabled", enum: "false", groupname: "GeoJsonLdConfiguration" },
  { key: "enabled", enum: "true", groupname: "ResourcesConfiguration" },
  { key: "enabled", enum: "false", groupname: "ResourcesConfiguration" },
  { key: "managerEnabled", enum: "true", groupname: "ResourcesConfiguration" },
  { key: "managerEnabled", enum: "false", groupname: "ResourcesConfiguration" },
  { key: "buildingBlock", enum: "COLLECTIONS", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "QUERYABLES", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "COMMON", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "CRS", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "CITY_JSON", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "FEATURES_CORE", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "GEO_JSON", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "GML", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "FEATURES_HTML", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "FOUNDATION", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "HTML", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "JSON", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "OAS30", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "TILE_MATRIX_SETS", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "TILES", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "XML", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "SCHEMA", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "CRUD", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "TRANSACTIONS", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "GLTF", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "JSON_FG", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "SEARCH", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "FILTER", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "GEOMETRY_SIMPLIFICATION", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "PROJECTIONS", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "ROUTING", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "SORTING", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "STYLES", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "TEXT_SEARCH", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "TILES3D", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "CSV", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "FEATURES_EXTENSIONS", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "FLATGEOBUF", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "GEO_JSON_LD", groupname: "ExtensionConfiguration" },
  { key: "buildingBlock", enum: "RESOURCES", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "COLLECTIONS", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "QUERYABLES", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "COMMON", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "CRS", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "CITY_JSON", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "FEATURES_CORE", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "GEO_JSON", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "GML", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "FEATURES_HTML", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "FOUNDATION", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "HTML", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "JSON", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "OAS30", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "TILE_MATRIX_SETS", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "TILES", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "XML", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "SCHEMA", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "CRUD", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "TRANSACTIONS", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "GLTF", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "JSON_FG", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "SEARCH", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "FILTER", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "GEOMETRY_SIMPLIFICATION", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "PROJECTIONS", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "ROUTING", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "SORTING", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "STYLES", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "TEXT_SEARCH", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "TILES3D", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "CSV", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "FEATURES_EXTENSIONS", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "FLATGEOBUF", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "GEO_JSON_LD", groupname: "ExtensionConfiguration" },
  { key: "extensionType", enum: "RESOURCES", groupname: "ExtensionConfiguration" },
  { key: "enabled", enum: "true", groupname: "FeatureTypeConfigurationOgcApi" },
  { key: "enabled", enum: "false", groupname: "FeatureTypeConfigurationOgcApi" },
];

export const expectedYamlKeysAll = [
  { path: "id", index: 0, lineOfPath: 2 },
  { path: "api", index: 0, lineOfPath: 3 },
  { path: "api.buildingBlock", index: 4, lineOfPath: 4, startOfArray: 4, arrayIndex: 0 },
  { path: "api.metadata", index: 4, lineOfPath: 5, startOfArray: 4, arrayIndex: 0 },
  { path: "api.buildingBlock", index: 4, lineOfPath: 6, startOfArray: 6, arrayIndex: 1 },
  { path: "api.metadata", index: 4, lineOfPath: 7, startOfArray: 6, arrayIndex: 1 },
  { path: "api.metadata.email", index: 6, lineOfPath: 8, startOfArray: 6, arrayIndex: 1 },
  { path: "api.buildingBlock", index: 4, lineOfPath: 9, startOfArray: 9, arrayIndex: 2 },
  { path: "api.metadata", index: 4, lineOfPath: 10, startOfArray: 9, arrayIndex: 2 },
  { path: "api.metadata.metadata2", index: 6, lineOfPath: 11, startOfArray: 9, arrayIndex: 2 },
  {
    path: "api.metadata.metadata2.email",
    index: 8,
    lineOfPath: 12,
    startOfArray: 9,
    arrayIndex: 2,
  },
  { path: "api.buildingBlock", index: 4, lineOfPath: 13, startOfArray: 13, arrayIndex: 3 },
  { path: "api.additionalLinks", index: 4, lineOfPath: 14, startOfArray: 13, arrayIndex: 3 },
  {
    path: "api.additionalLinks.rel",
    index: 8,
    lineOfPath: 15,
    startOfArray: 15,
    arrayIndex: 0,
  },
  { path: "api.buildingBlock", index: 4, lineOfPath: 16, startOfArray: 16, arrayIndex: 4 },
  { path: "metadata", index: 0, lineOfPath: 17 },
  { path: "metadata.keywords", index: 2, lineOfPath: 18 },
  { path: "collections", index: 0, lineOfPath: 20 },
  { path: "collections.umweltzone", index: 2, lineOfPath: 21 },
  { path: "collections.umweltzone.id", index: 4, lineOfPath: 22 },
  { path: "collections2", index: 0, lineOfPath: 23 },
  { path: "collections2.umweltzone", index: 2, lineOfPath: 24 },
  { path: "collections2.umweltzone.additionalLinks", index: 4, lineOfPath: 25 },
  {
    path: "collections2.umweltzone.additionalLinks.rel",
    index: 8,
    lineOfPath: 26,
    startOfArray: 26,
    arrayIndex: 0,
  },
];

export const yamlKeysGetPathAtCursor = [
  { path: "id", index: 0, lineOfPath: 2 },
  { path: "api", index: 0, lineOfPath: 3 },
  { path: "api.buildingBlock", index: 4, lineOfPath: 4, startOfArray: 4, arrayIndex: 0 },
  { path: "api.metadata", index: 4, lineOfPath: 5, startOfArray: 4, arrayIndex: 0 },
  { path: "api.buildingBlock", index: 4, lineOfPath: 6, startOfArray: 6, arrayIndex: 1 },
  { path: "api.metadata", index: 4, lineOfPath: 7, startOfArray: 6, arrayIndex: 1 },
];

export const exampleDocument = `---
id: bla
api:
  - buildingBlock: COLLECTIONS
    metadata: true
  - buildingBlock: STYLES
    metadata:
      email: bla
  - buildingBlock: TILES
    metadata:
      metadata2: 
        email: bla
  - buildingBlock: BLA
    additionalLinks:
      - rel: describedby
  - buildingBlock: BLUE
metadata:
  keywords:
    - Umweltzonen
collections:
  umweltzone:
    id: umweltzone
collections2:
  umweltzone:
    additionalLinks:
      - rel: tag`;

export const defMapProv1Completion = {
  contactName: {
    groupname: "ApiMetadata",
    title: "contactName",
    description: "Optional name of a contact person or organization for the API.",
    type: "object",
    ref: "",
    addRef: "",
    deprecated: false,
  },
  metadata: {
    groupname: "OgcApiDataV2",
    title: "metadata",
    description: "General [Metadata](#metadata) for the API.",
    ref: "ApiMetadata",
    addRef: "",
    deprecated: false,
    type: "object",
  },
};
